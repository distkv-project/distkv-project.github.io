{
  "filename": "command_guide.md",
  "__html": "<h2 id=\"introduction\">Introduction <a class=\"header-anchor\" href=\"#introduction\">#</a></h2>\n<p>Distkv is a type-oriented database system. There are several concepts in Distkv that looks like the basic collections.\nWe have 6 concepts <code>string</code>, <code>list</code>, <code>set</code>, <code>dict</code>, <code>sortedlist</code> and <code>table</code> yet.</p>\n<p>In this section, you will learn the grammer of these basic concepts in Distkv, and will learn how to use these concepts as examples as well.</p>\n<h2 id=\"1.-string-concept\">1. String Concept <a class=\"header-anchor\" href=\"#1.-string-concept\">#</a></h2>\n<p>Put a string value into Distkv store.</p>\n<pre><code class=\"language-bash\">str.put key value\n</code></pre>\n<p>example:</p>\n<pre><code class=\"language-bash\">$ dkv-cli &gt; str.put k1 v1\n$ dkv-cli &gt; ok\n</code></pre>\n<p>Get a string value from Distkv store.</p>\n<pre><code class=\"language-bash\">str.get key\n</code></pre>\n<p>example:</p>\n<pre><code class=\"language-bash\">dkv-cli &gt; str.get k1\ndkv-cli &gt; v1\n</code></pre>\n<p>Drop a string value from Distkv store.</p>\n<pre><code class=\"language-bash\">str.drop key\n</code></pre>\n<p>example:</p>\n<pre><code class=\"language-bash\">dkv-cli &gt; str.drop k1\ndkv-cli &gt; ok\n\ndkv-cli &gt; str.get k1\ndkv-cli &gt; errorCode: A100;\n Detail: The key k1 is not found <span class=\"hljs-keyword\">in</span> the store.\n</code></pre>\n<h2 id=\"2.-list-concept\">2. List Concept <a class=\"header-anchor\" href=\"#2.-list-concept\">#</a></h2>\n<p>Put a list into Distkv store.</p>\n<pre><code class=\"language-bash\">list.put key value1 [value2 [value3 [...]]]\n</code></pre>\n<p>example:</p>\n<pre><code class=\"language-bash\">dkv-cli &gt; list.put k1 v1 v2 v3\ndkv-cli &gt; ok\n</code></pre>\n<p>Get a list from Distkv store.</p>\n<pre><code class=\"language-bash\">list.get key\n</code></pre>\n<p>example:</p>\n<pre><code class=\"language-bash\">dkv-cli &gt; list.get k1\ndkv-cli &gt; [v1, v2, v3]\n</code></pre>\n<p>Get a range of items of the list from Distkv store.</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-comment\"># Note that it's excluding the `end_index`.</span>\nlist.get key from_index end_index\n</code></pre>\n<p>example:</p>\n<pre><code class=\"language-bash\">dkv-cli &gt; list.get k1 0 2\ndkv-cli &gt; [v1, v2]\n</code></pre>\n<p>Get one item of the list from Distkv store.</p>\n<pre><code class=\"language-bash\">list.get key index\n</code></pre>\n<p>example:</p>\n<pre><code class=\"language-bash\">dkv-cli &gt; list.get k1 1\ndkv-cli &gt; v1\n</code></pre>\n<p>Put items into the front of the list.</p>\n<pre><code class=\"language-bash\">list.lput key value1 [value2 [value3 [...]]]\n</code></pre>\n<p>example:</p>\n<pre><code class=\"language-bash\">dkv-cli &gt; list.lput <span class=\"hljs-string\">\"k1\"</span> <span class=\"hljs-string\">\"v4\"</span> <span class=\"hljs-string\">\"v5\"</span> <span class=\"hljs-string\">\"v6\"</span>\ndkv-cli &gt; ok\n</code></pre>\n<p>Put items into the back of the list.</p>\n<pre><code class=\"language-bash\">list.rput key value1 [value2 [value3 [...]]]\n</code></pre>\n<p>example:</p>\n<pre><code class=\"language-bash\">dkv-cli &gt; list.rput <span class=\"hljs-string\">\"k1\"</span> <span class=\"hljs-string\">\"v7\"</span>\ndkv-cli &gt; ok\n</code></pre>\n<p>Remove item from the list with the given index.</p>\n<pre><code class=\"language-bash\">list.ldel key index\n</code></pre>\n<p>example:</p>\n<pre><code class=\"language-bash\">dkv-cli &gt; list.ldel <span class=\"hljs-string\">\"k1\"</span> 2\ndkv-cli &gt; ok\n</code></pre>\n<p>Remove item from the back of the list with the given back index.</p>\n<pre><code class=\"language-bash\">list.rdel key back_index\n</code></pre>\n<p>If the list is [1, 2, 3] and the given number is 0, item <code>3</code> will be removed.</p>\n<p>example:</p>\n<pre><code class=\"language-bash\">dkv-cli &gt; list.rdel <span class=\"hljs-string\">\"k1\"</span> 2\ndkv-cli &gt; ok\n</code></pre>\n<p>Get the list from Distkv store.</p>\n<pre><code class=\"language-bash\">list.get key\n</code></pre>\n<p>example:</p>\n<pre><code class=\"language-bash\">dkv-cli &gt; list.get <span class=\"hljs-string\">\"k1\"</span>\ndkv-cli &gt; [<span class=\"hljs-string\">\"v6\"</span>, <span class=\"hljs-string\">\"v1\"</span>, <span class=\"hljs-string\">\"v2\"</span>]\n</code></pre>\n<h2 id=\"3.-set-concept\">3. Set concept <a class=\"header-anchor\" href=\"#3.-set-concept\">#</a></h2>\n<pre><code class=\"language-bash\">dkv-cli &gt; set.put <span class=\"hljs-string\">\"k1\"</span> <span class=\"hljs-string\">\"v1\"</span> <span class=\"hljs-string\">\"v2\"</span> <span class=\"hljs-string\">\"v3\"</span>\ndkv-cli &gt; ok\n\ndkv-cli &gt; set.get <span class=\"hljs-string\">\"k1\"</span>\ndkv-cli &gt; {<span class=\"hljs-string\">\"v1\"</span>, <span class=\"hljs-string\">\"v2\"</span>, <span class=\"hljs-string\">\"v3\"</span>}\n\ndkv-cli &gt; set.del <span class=\"hljs-string\">\"k1\"</span> <span class=\"hljs-string\">\"v1\"</span>\ndkv-cli &gt; ok\n\ndkv-cli &gt; set.get <span class=\"hljs-string\">\"k1\"</span>\ndkv-cli &gt; {<span class=\"hljs-string\">\"v2\"</span>, <span class=\"hljs-string\">\"v3\"</span>}\n\ndkv-cli &gt; set.exists <span class=\"hljs-string\">\"k1\"</span> <span class=\"hljs-string\">\"v2\"</span>\ndkv-cli &gt; <span class=\"hljs-literal\">true</span>\n\ndkv-cli &gt; set.exists <span class=\"hljs-string\">\"k1\"</span> <span class=\"hljs-string\">\"v4\"</span>\ndkv-cli &gt; <span class=\"hljs-literal\">false</span>\n\ndkv-cli &gt; set.drop <span class=\"hljs-string\">\"k1\"</span>\ndkv-cli &gt; ok\n</code></pre>\n<h2 id=\"4.-dict-concept\">4. Dict concept <a class=\"header-anchor\" href=\"#4.-dict-concept\">#</a></h2>\n<pre><code class=\"language-bash\">dkv-cli &gt; dict.put <span class=\"hljs-string\">\"dict1\"</span> <span class=\"hljs-string\">\"k1\"</span> <span class=\"hljs-string\">\"v1\"</span> <span class=\"hljs-string\">\"k2\"</span> <span class=\"hljs-string\">\"v2\"</span>\ndkv-cli &gt; ok\n\ndkv-cli &gt; dict.get <span class=\"hljs-string\">\"dict1\"</span>\ndkv-cli &gt; { <span class=\"hljs-string\">\"k1\"</span> : <span class=\"hljs-string\">\"v1\"</span>, <span class=\"hljs-string\">\"k2\"</span> : <span class=\"hljs-string\">\"v2\"</span>}\n\ndkv-cli &gt; dict.get <span class=\"hljs-string\">\"dict1\"</span> <span class=\"hljs-string\">\"k1\"</span>\ndkv-cli &gt; <span class=\"hljs-string\">\"v1\"</span>\n\ndkv-cli &gt; dict.get <span class=\"hljs-string\">\"dict1\"</span> <span class=\"hljs-string\">\"k1\"</span>\ndkv-cli &gt; <span class=\"hljs-string\">\"v1\"</span>\n\ndkv-cli &gt; dict.del <span class=\"hljs-string\">\"dict1\"</span> <span class=\"hljs-string\">\"k1\"</span>\ndkv-cli &gt; ok\n\ndkv-cli &gt; dict.pop <span class=\"hljs-string\">\"dict1\"</span> <span class=\"hljs-string\">\"k2\"</span>\ndkv-cli &gt; <span class=\"hljs-string\">\"v2\"</span>\n\ndkv-cli &gt; dict.get <span class=\"hljs-string\">\"dict1\"</span>\ndkv-cli &gt; []\n\ndkv-cli &gt; dict.drop <span class=\"hljs-string\">\"dict1\"</span>\ndkv-cli &gt; ok\n</code></pre>\n<h2 id=\"5.-sortedlist-concept\">5. SortedList Concept <a class=\"header-anchor\" href=\"#5.-sortedlist-concept\">#</a></h2>\n<pre><code class=\"language-bash\">dkv-cli &gt; slist.put <span class=\"hljs-string\">\"slist1\"</span> <span class=\"hljs-string\">\"m12\"</span> 12 <span class=\"hljs-string\">\"m2\"</span> 2 <span class=\"hljs-string\">\"m5\"</span> 5\ndkv-cli &gt; ok\n\ndkv-cli &gt; slist.top <span class=\"hljs-string\">\"slist1\"</span> 2\ndkv-cli &gt; [(<span class=\"hljs-string\">\"m12\"</span>, 12), (<span class=\"hljs-string\">\"m5\"</span>, 5)]\n\ndkv-cli &gt; slist.incrScore <span class=\"hljs-string\">\"slist1\"</span> <span class=\"hljs-string\">\"m5\"</span> 10\ndkv-cli &gt; ok\n\ndkv-cli &gt; slist.putMember <span class=\"hljs-string\">\"slist1\"</span> <span class=\"hljs-string\">\"m9\"</span> 13\ndkv-cli &gt; ok\n\ndkv-cli &gt; slist.removeMember <span class=\"hljs-string\">\"slist1\"</span> <span class=\"hljs-string\">\"m9\"</span>\ndkv-cli &gt; ok\n\ndkv-cli &gt; slist.top <span class=\"hljs-string\">\"slist1\"</span> 2\ndkv-cli &gt; [(<span class=\"hljs-string\">\"m5\"</span>, 15), (<span class=\"hljs-string\">\"m12\"</span>, 12)]\n\ndkv-cli &gt; slist.getMember <span class=\"hljs-string\">\"slist1\"</span> <span class=\"hljs-string\">\"m12\"</span>\ndkv-cli &gt; (<span class=\"hljs-string\">\"m12\"</span>, 12), 2nd\n\ndkv-cli &gt; slist.drop <span class=\"hljs-string\">\"slist1\"</span>\ndkv-cli &gt; ok\n</code></pre>\n<h2 id=\"6.-table-concept\">6. Table concept <a class=\"header-anchor\" href=\"#6.-table-concept\">#</a></h2>\n<ol>\n<li>Define your data structure in a schema file named <code>mytables.sc</code></li>\n</ol>\n<pre><code class=\"language-shell\">table TaskTable {\n  [p]task_id: string;\n  [i]driver_id: string;\n  task_name: string;\n  return_num: int;\n  arguments: [string];\n}\n</code></pre>\n<pre><code class=\"language-shell\">table DriverTable {\n [p]driver_id: string;\n driver_name: string;\n actor_num: int;\n};\n</code></pre>\n<ol start=\"2\">\n<li>Start an distkv server and execute this command to create table:</li>\n</ol>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">&gt;</span><span class=\"bash\"> dkv-cli -p 12344 <span class=\"hljs-comment\"># connect to distkv server</span></span>\n<span class=\"hljs-meta\">&gt;</span><span class=\"bash\"> create TaskTable, DriverTable from mytables.sc</span>\n</code></pre>\n<ol start=\"3\">\n<li>Add data to the table:</li>\n</ol>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">&gt;</span><span class=\"bash\"> TaskTable.add <span class=\"hljs-string\">\"00001\"</span>, <span class=\"hljs-string\">\"22222\"</span>, <span class=\"hljs-string\">\"my_task\"</span>, 3, [<span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-string\">\"2\"</span>]</span>\n&lt; ok\n<span class=\"hljs-meta\">&gt;</span><span class=\"bash\"> TaskTable.add <span class=\"hljs-string\">\"00002\"</span>, <span class=\"hljs-string\">\"99999\"</span>, <span class=\"hljs-string\">\"my_task\"</span>, 3, [<span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-string\">\"2\"</span>]</span>\n&lt; ok\n<span class=\"hljs-meta\">&gt;</span><span class=\"bash\"> TaskTable.add <span class=\"hljs-string\">\"00003\"</span>, <span class=\"hljs-string\">\"22222\"</span>, <span class=\"hljs-string\">\"my_task\"</span>, 3, [<span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-string\">\"2\"</span>]</span>\n&lt; ok\n<span class=\"hljs-meta\">&gt;</span><span class=\"bash\"> DriverTable.add <span class=\"hljs-string\">\"22222\"</span>, <span class=\"hljs-string\">\"my_driver\"</span>, 10</span>\n&lt; ok\n</code></pre>\n<ol start=\"4\">\n<li>Query all tasks by driver id:</li>\n</ol>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">&gt;</span><span class=\"bash\"> TaskTable.query (*) when driver_id == <span class=\"hljs-string\">\"22222\"</span></span>\n&lt;\n&lt; task_id      driver_id     task_name      num_return      arguments\n&lt; \"00001\"      \"22222\"       \"my_task\"      3               [\"1\", \"2\"]\n&lt; \"00003\"      \"22222\"       \"my_task\"      3               [\"1\", \"2\"]\n&lt; 2 records\n</code></pre>\n",
  "link": "\\zh-cn\\docs\\command_guide.html",
  "meta": {}
}